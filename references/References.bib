@article{Castro-Mondragon2017, 
year = {2017}, 
title = {{RSAT matrix-clustering: dynamic exploration and redundancy reduction of transcription factor binding motif collections}}, 
author = {Castro-Mondragon, Jaime Abraham and Jaeger, Sébastien and Thieffry, Denis and Thomas-Chollier, Morgane and Helden, Jacques van}, 
journal = {Nucleic Acids Research}, 
issn = {0305-1048}, 
doi = {10.1093/nar/gkx314}, 
pmid = {28591841}, 
pmcid = {PMC5737723}, 
abstract = {{Transcription factor (TF) databases contain multitudes of binding motifs (TFBMs) from various sources, from which non-redundant collections are derived by manual curation. The advent of high-throughput methods stimulated the production of novel collections with increasing numbers of motifs. Meta-databases, built by merging these collections, contain redundant versions, because available tools are not suited to automatically identify and explore biologically relevant clusters among thousands of motifs. Motif discovery from genome-scale data sets (e.g. ChIP-seq) also produces redundant motifs, hampering the interpretation of results. We present matrix-clustering, a versatile tool that clusters similar TFBMs into multiple trees, and automatically creates non-redundant TFBM collections. A feature unique to matrix-clustering is its dynamic visualisation of aligned TFBMs, and its capability to simultaneously treat multiple collections from various sources. We demonstrate that matrix-clustering considerably simplifies the interpretation of combined results from multiple motif discovery tools, and highlights biologically relevant variations of similar motifs. We also ran a large-scale application to cluster ∼11 000 motifs from 24 entire databases, showing that matrix-clustering correctly groups motifs belonging to the same TF families, and drastically reduced motif redundancy. matrix-clustering is integrated within the RSAT suite (http://rsat.eu/), accessible through a user-friendly web interface or command-line for its integration in pipelines.}}, 
pages = {e119--e119}, 
number = {13}, 
volume = {45}, 
keywords = {}
}



@article{Castro-Mondragon2021, 
year = {2021}, 
title = {{JASPAR 2022: the 9th release of the open-access database of transcription factor binding profiles}}, 
author = {Castro-Mondragon, Jaime A and Riudavets-Puig, Rafael and Rauluseviciute, Ieva and Berhanu Lemma, Roza and Turchi, Laura and Blanc-Mathieu, Romain and Lucas, Jeremy and Boddie, Paul and Khan, Aziz and Manosalva Pérez, Nicolás and Fornes, Oriol and Leung, Tiffany Y and Aguirre, Alejandro and Hammal, Fayrouz and Schmelter, Daniel and Baranasic, Damir and Ballester, Benoit and Sandelin, Albin and Lenhard, Boris and Vandepoele, Klaas and Wasserman, Wyeth W and Parcy, François and Mathelier, Anthony}, 
journal = {Nucleic Acids Research}, 
issn = {0305-1048}, 
doi = {10.1093/nar/gkab1113}, 
pmid = {34850907}, 
pmcid = {PMC8728201}, 
abstract = {{JASPAR (http://jaspar.genereg.net/) is an open-access database containing manually curated, non-redundant transcription factor (TF) binding profiles for TFs across six taxonomic groups. In this 9th release, we expanded the CORE collection with 341 new profiles (148 for plants, 101 for vertebrates, 85 for urochordates, and 7 for insects), which corresponds to a 19\% expansion over the previous release. We added 298 new profiles to the Unvalidated collection when no orthogonal evidence was found in the literature. All the profiles were clustered to provide familial binding profiles for each taxonomic group. Moreover, we revised the structural classification of DNA binding domains to consider plant-specific TFs. This release introduces word clouds to represent the scientific knowledge associated with each TF. We updated the genome tracks of TFBSs predicted with JASPAR profiles in eight organisms; the human and mouse TFBS predictions can be visualized as native tracks in the UCSC Genome Browser. Finally, we provide a new tool to perform JASPAR TFBS enrichment analysis in user-provided genomic regions. All the data is accessible through the JASPAR website, its associated RESTful API, the R/Bioconductor data package, and a new Python package, pyJASPAR, that facilitates serverless access to the data.}}, 
pages = {gkab1113--}, 
number = {D1}, 
volume = {50}, 
keywords = {}
}


@article{Santana-Garcia2022, 
year = {2022}, 
title = {{RSAT 2022: regulatory sequence analysis tools}}, 
author = {Santana-Garcia, Walter and Castro-Mondragon, Jaime A and Padilla-Gálvez, Mónica and Nguyen, Nga Thi Thuy and Elizondo-Salas, Ana and Ksouri, Najla and Gerbes, François and Thieffry, Denis and Vincens, Pierre and Contreras-Moreira, Bruno and Helden, Jacques van and Thomas-Chollier, Morgane and Medina-Rivera, Alejandra}, 
journal = {Nucleic Acids Research}, 
issn = {0305-1048}, 
doi = {10.1093/nar/gkac312}, 
pmid = {35544234}, 
pmcid = {PMC9252783}, 
abstract = {{RSAT (Regulatory Sequence Analysis Tools) enables the detection and the analysis of cis-regulatory elements in genomic sequences. This software suite performs (i) de novo motif discovery (including from genome-wide datasets like ChIP-seq/ATAC-seq) (ii) genomic sequences scanning with known motifs, (iii) motif analysis (quality assessment, comparisons and clustering), (iv) analysis of regulatory variations and (v) comparative genomics. RSAT comprises 50 tools. Six public Web servers (including a teaching server) are offered to meet the needs of different biological communities. RSAT philosophy and originality are: (i) a multi-modal access depending on the user needs, through web forms, command-line for local installation and programmatic web services, (ii) a support for virtually any genome (animals, bacteria, plants, totalizing over 10 000 genomes directly accessible). Since the 2018 NAR Web Software Issue, we have developed a large REST API, extended the support for additional genomes and external motif collections, enhanced some tools and Web forms, and developed a novel tool that builds or refine gene regulatory networks using motif scanning (network-interactions). The RSAT website provides extensive documentation, tutorials and published protocols. RSAT code is under open-source license and now hosted in GitHub. RSAT is available at http://www.rsat.eu/.}}, 
pages = {W670--W676}, 
number = {W1}, 
volume = {50}, 
keywords = {}
}